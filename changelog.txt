Версия 1.0.1

Реализован REST сервис для получения печатных форм документов "Счет покупателю", "ТОРГ12".

1. "Счет покупателю"

Описание вызова. Сервис вызывается методом GET и принимает следующие параметры:


<веб сервер>/<имя публикации>/hs/int/print/get?firm_uuid=a9e8b409-1cda-11e6-a31d-14dae9b19a48&doc_number=0000-000601&format=html&doc_type=invoice&doc_date=29.12.2016 00:00:00&prn_form=invoice

Где:

firm_uuid - UUID Организации отправителя в базе 1С
doc_number - Номер документа “Счет покупателю” в базе 1С
doc_date - Дата документа “Счет покупателю” в базе 1С
format - Формат печатной формы “Счет покупателю”. Может принимать значение html, pdf, xlsx, json
doc_type - Вид документа, печатную форму которого получаем. Принимает значение  invoice для документа “Счет покупателю”
prn_form - Вид печатной формы. Принимает значение invoice для doc_type = invoice 

Также доступен такой вызов:

<веб сервер>/<имя публикации>/hs/int/print/get?doc_uuid=a9e8b4100-1cda-11e6-a31d-14dae9b19a48&format=html&doc_type=invoice&prn_form=invoice

Где: 

doc_type - Вид документа, печатную форму которого получаем. Принимает значение  invoice для документа “Счет покупателю”
doc_uuid - UUID документа в базе 1С
prn_form - Вид печатной формы. Принимает значение invoice для doc_type = invoice, 

Если передаем doc_uuid, то параметры firm_uuid, doc_date, doc_number игнорируются.

2. "Реализация товаров и услуг"

Описание вызова. Сервис вызывается методом GET и принимает следующие параметры:

<веб сервер>/<имя публикации>/hs/int/print/get?firm_uuid=a9e8b409-1cda-11e6-a31d-14dae9b19a48&doc_number=0000-000601&format=html&doc_type=sales&doc_date=29.12.2016 00:00:00&prn_form=torg12

Где:

firm_uuid - UUID Организации отправителя в базе 1С
doc_number - Номер документа “Реализация товаров и услуг” в базе 1С
doc_date - Дата документа “Реализация товаров и услуг” в базе 1С
format - Формат печатной формы “Счет покупателя”. Может принимать значение html, pdf, xlsx, json
doc_type - Вид документа, печатную форму которого получаем. Принимает значение  sales для документа “Реализация товаров и услуг”
prn_form - Вид печатной формы. Принимает значение torg12 для doc_type = sales 

Также доступен такой вызов:

<веб сервер>/<имя публикации>/hs/int/print/get?doc_uuid=a9e8b4100-1cda-11e6-a31d-14dae9b19a48&format=html&doc_type=sales&prn_form=torg12

Где: 

doc_type - Вид документа, печатную форму которого получаем. Принимает значение  sales для документа “Реализация товаров и услуг”
doc_uuid - UUID документа в базе 1С
prn_form - Вид печатной формы. Принимает значение torg12 для doc_type = sales, 

Если передаем doc_uuid, то параметры firm_uuid, doc_date, doc_number игнорируются

Версия 1.0.2

Реализован REST сервис для получения печатной формы документа "Счет фактура выданный".

Версия 1.0.3

В скачиваемых печатных формах добавлены подписи и печати.

Версия 1.0.4

Исправление ошибок

Версия 1.0.5

Исправление ошибок

Версия 1.0.6

Изменения в версии 1.0.6

Получение объектов

1. Изменен REST сервис получения объектов

Было	- Api: .../hs/int/doc/get?doc_uuid=63d07910-1e98-11e6-a31d-14dae9b19a48&format=json&doc_type=bill
Стало	- Api: .../hs/int/doc/get?doc_uuid=63d07910-1e98-11e6-a31d-14dae9b19a48&format=json

Убран параметр doc_type. Научил сервис определять тип по uuid. Структура возврата та же.

2. Изменена кодировка во всех структурах возврата к UTF-8. До этого применялась системная. 

Новое в версии 1.0.6

1. Реализован метод получения объекта по его uuid 

API: ...hs/int/ref/get?obj_uuid=334222d7-d67f-11eb-967c-e0d55e0c8b18&format=json

2. Реализован POST метод создания реализации на основании счета покупателю

API: .../hs/int/doc/post?

В качестве входного параметра необходимо передать json структура следующего вида

{
"ident": "create_linked_doc",
"params": {
"doc_owner_uuid": "4270475a-d8e1-11eb-967c-e0d55e0c8b18",
"doc_type": "sales",
"doc_subtype": "goods",
"doc_wh_uuid": "c23de3dc-cc0d-11e5-9653-3085a93ddca2",
"force": false,
"post": true
}
}

Где, 
Ident - идентификатор метода. Тип Строка. Принимает значение "create_linked_doc" для запуска процедуры создания подчиненного документа
params -  параметры конкретного метода ident. Тип Структура.
doc_owner_uuid - uuid документа основания. Тип строка
doc_type - Вид документа потомка. Тип строка. Принимает значение “sales” для документа “Реализация товаров и услуг”
doc_subtype - Вид реализации. Тип строка. Принимает значение “goods” для вида реализации “Товары”
doc_wh_uuid - uuid склада. Тип строка.
post - Провести. Тип Булево. Принимает значение истина если необходимо провести документ после записи. Ложь - оставить не проведенным.
force - Принудительное создание документа. Тип - булево. Принимает значение “истина” если необходимо создать документ в любом случае. Даже если реализации по документу основанию уже есть. Принимает значение “ложь” если необходимо проверять наличие документов. Логика такая: Если у счета-покупателю нет не помеченных на удаление реализаций - создаем, иначе отдаем массив не создавая документов

Структура возврата (при force = false, post = true)

{
	"error": false,
	"result": [
		{
			"doc_uuid": "4f03f20f-db6e-11eb-967d-e0d55e0c8b18",
			"doc_name": "Реализация (акт, накладная, УПД) 0000-000020 от 29.06.2021 0:00:00",
			"doc_type": "Реализация (акт, накладная, УПД)",
			"doc_date": "2021-06-29T00:00:00",
			"doc_number": "0000-000020",
			"doc_deletionmark": false,
			"doc_posted": false
		},
	{
			"doc_uuid": "fe80c4ea-db6e-11eb-967d-e0d55e0c8b18",
			"doc_name": "Реализация (акт, накладная, УПД) 0000-000022 от 29.06.2021 0:00:00",
			"doc_type": "Реализация (акт, накладная, УПД)",
			"doc_date": "2021-06-29T00:00:00",
			"doc_number": "0000-000022",
			"doc_deletionmark": false,
			"doc_posted": true
		}
	]
}

Структура возврата (при force = true, post = true)

{
	"error": false,
	"result": [
		{
			"doc_uuid": "827acfbf-db77-11eb-967d-e0d55e0c8b18",
			"doc_name": "Реализация (акт, накладная, УПД) 0000-000023 от 29.06.2021 0:00:00",
			"doc_type": "Реализация (акт, накладная, УПД)",
			"doc_date": "2021-06-29T00:00:00",
			"doc_number": "0000-000023",
			"doc_deletionmark": false,
			"doc_posted": true
		}
	]
}

Версия 1.0.7

1. Добавлен справочник "Продукт"
2. Добавлена роль для работы со справочником
3. На формы документов: 

	реализация
	поступления 
	счет 
	приходный кассовый ордер
	расходный кассовый ордер
	выписка с банка (списание с расчетного счета)
	выписка с банка (поступление на расчетный счет)

выведен реквизит "Продукт" (Элемент справочника "Продукт")

Версия 1.0.8

1. Исправлены ошибки при создании реализации на основании счета. 
2. Исправлена ошибка, когда при проведении созданной реализации, при отсутствии остатков товаров на счетах учета, реализация создавалась с пустой табличной частью "Товары". Поведение изменено. Теперь при невозможности проведения документ просто сохраняется. Для того чтобы была возможность проводить документы при отсутствии остатков, необходимо отключить контроль остатков. Это делается в интерфейсе предприятия: "Администрирование - Проведение документов - Разрешить списание запасов при отсутствии остатков по данным учета"
3. Изменено поведение при определении вида реализации. Теперь система пытается установить вид реализации на основании документа основания. Если это невозможно, например когда в табличной части счета покупателю есть номенклатура с видом "Товар" и "Услуга", в этом случае вид реализации устанавливается в зависимости от параметра doc_subtype.
doc_subtype может принимать следующие значения:
	Если doc_subtype = "goods" тогда 	Вид реализации = Товары;
	Если doc_subtype = "services" тогда Вид реализации = Услуги;		
	Если doc_subtype = "comission" тогда Вид реализации = Продажа, комиссия;
	Если doc_subtype = "shipment" тогда Вид реализации = Отгрузка Без Перехода Права Собственности;
	Если doc_subtype = "equipment" тогда Вид реализации = Оборудование;
4. На форму документа "Счет на оплату поставщика" размещено поле "Продукт"
5. На форму документа "Поступление доп.расходов" размещено поле "Продукт" 
6. Доработана процедура создания реализации на основании документов "Счет на оплату покупателю" и "Поступление товаров и услуг". Поле продукт документа "Реализация товаров и услуг" заполняется на основании поля "Продукт" документа основания. Раньше поле заполнялось только если вызов был произведен из REST.

Версия 1.0.9

1. Добавлена подсистема "Ubirator"
2. Добавлен отчет "Движения товаров услуг"
3. Добавлена обработка "Заполнение продукта"

Версия 1.0.10

Доработана обработка "Заполнение продукта"

	Добавлен отбор по полю "Подразделение"
	Добавлен отбор по полю "Договор". Фильтр по конструкции "Содержит"
	Добавлен отбор по полю "Комментарий". Фильтр по конструкции "Содержит"

Версия 1.0.11

Исправлена ошибка при создании реализации на основании счета. 

{
        "error": true,
        "text": "{Интеграция HTTPСервис.Интеграция.Модуль(348)}: Iterator is not defined for the value"
}

Версия 1.0.12

1. Доработана Обработка "Добавления продукта" по требованию заказчика.

	Пометить обязательные поля для заполнения (вид документа, организация, период)
	Отразить в таблице столбцы Контрагент, договор, подразделение,  сумму документа
	Сделать возможность  сортировать  по дате документы
	Не отражать помеченные на удаление и непроведенные документы.

Версия 1.0.13

1. Исправлено проведение документа "Поступление товаров и услуг", если установлен  счет 76.09 для расчета авансов с контрагентом

Версия 1.0.14

1. В карточку контрагента добавлены формы добавления телефонных номеров и банковских карт контрагентов

Версия 1.0.15

1. Исправлен баг, с не отображением поля "продукт" в документе "Поступление товаров и услуг (комиссия)"

Версия 1.0.15.1

1. Переработан механизм хранения данных по картам и телефонным номерам.

Теперь это справочники "ТелефонныеНомераКонтрагента" и "БанковскиеКартыКонтрагента". Оба подчинены справочнику "Контрагенты".Интерфейс работы с сущностями стал визуально приятнее и проще.

Процедура создания КА из сторонней системы:

Создание элемента справочника "Контрагенты". Запись элемента.
Создание элементов подчиненного справочника "ТелефонныеНомераКонтрагента". Запись элементов. Элемент справочника "Контрагенты" на этот момент должен существовать.
Создание элементов подчиненного справочника "БанковскиеКартыКонтрагента". Запись элементов. Элемент справочника "Контрагенты" на этот момент должен существовать.
Повторная запись элемента справочника "Контрагенты". Сработает триггер который заполнит поля "ТелефонныеНомераСтрокой", "БанковскиеКартыСтрокой". Это нужно для того чтобы в журнале КА появились поля для поиска. 

как связывать эти поля:
Сначала одата находит контрагент, вызывает его подчиненные справочники - телефоны и номера карт - ищет там нужный.

Версия 1.0.16

1. Добавлена обработка для регистрации объектов oData, которая видит и объекты расширений.

Версиия 1.0.17

1. Реализовано: Добавить в обработку автосоздания реализации из выгруженного счета - копирование полей из счетов в реализацию: "продукт", "подразделение"
2. Реализовано: Необходимо настроить в 1с чтобы номер счет-фактуры был равен номеру реализации, на которую она создана

Версия 1.0.18

1. Доработан механизм хранения агрегированных данных по телефонным номерам и банковским картам контрагента.
Доработан триггер агрегации данных телефонных номеров и банковских карт. Триггер срабатывает на изменение Подчиненных справочников "Телефоны контрагента", "Банковские карты контрагента". При этом номера телефонов и номера карт собираются в строку, разделенную символом ";".
2. Доработана форма Списка контрагентов. Добавлены колонки "Телефоны", "Карты" в которых отображаются агрегированные данные.

Изменение при работе с oData

3. Теперь нет необходимости перезаписывать головной элемент справочника "Контрагенты". Достаточно перезаписать элементы подчиненных справочников.

Версия 1.0.18.2

1. Реализована Задача № 58624. Автоматическое создание Счет-фактуры на основании автоматического создания реализации.

Для создания СФ на основании реализации необходимо в rest запрос 

.../hs/int/doc/post?

передать структуру следующего вида:

{
"ident": "create_linked_doc",
"params": {
"doc_owner_uuid": "c7ee46e4-3f1f-11ec-968c-e0d55e0c8b18",
"doc_type": "invoice",
"doc_subtype": "",
"doc_wh_uuid": "",
"force": true,
"post": true
}
}

Где, 

doc_owner_uuid - uuid реализации
doc_type = "invoice" - флаг создания фактуры

Версия 1.0.18.3

1. Доработана Задача № 58624. Автоматическое создание Счет-фактуры на основании автоматического создания реализации. Тепперь можно создать все подчиненные документы 
на основании счета покупателя.

Для создания подчиненных документов  в rest запрос 

.../hs/int/doc/post?

передать структуру следующего вида:

{
"ident": "create_all_linked_docs",
"doc_owner_uuid": "25edd495-4ac5-11ec-9ebb-00d8617a4984",
"params": 
[   
    {
        "index": 0,
        "doc_type": "sales",
        "doc_subtype": "goods",
        "doc_wh_uuid": "41ab4956-91e0-11e8-80e2-0050569f2e9f",
        "force": true,
        "post": true
    }
    {
        "index": 1,
        "doc_type": "invoice",
        "doc_subtype": "",
        "doc_wh_uuid": "",
        "force": true,
        "post": true
    }
]
}

Где, 

ident = "create_all_linked_docs" - флаг создания всех связанных документов
doc_owner_uuid - uuid счета покупателя
doc_type = "invoice" - флаг создания фактуры
doc_type = "sales" - флаг создания реализации
index = 0..n - индекс документа в создаваемой иерархии подчинения

Версия 1.0.19

1. Доработаны роли
2. Исправлена ошибка применения расширения
3. Версия совместимости расширения установлена в соответсвии с версией основной конфигурацией

Версия 1.0.19.1

1. Переработана обработка "Заполнение продукта" (Задача № 69860)

- Добавлен новый фильтр "Продукт"
- Изменен механизм обновления документов. Теперь обновляемые документы необходимо выбрать принудительно.
- В табличную часть добавлены столбцы "Вид операции", "Субконто1". По ним можно отфильтровывать результат выборки.

Версия 1.0.19.2

1. Иправлена ошибка в ролях (Задача № 70454)
2. Исправлена ошибка при которой не записывалось поле "Продукт" в документах (Задача № 70454)





