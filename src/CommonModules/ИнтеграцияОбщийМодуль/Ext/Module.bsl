
// Процедура - Вставить картинку в табличный документ
//
// Параметры:
//  ОбъектСсылка		 - Ссылка на объект, в котором хранится файл	 -  Ссылка
//  ТабДокумент			 - Табличный документ в который вставляется рисунок	 - ТабличныйДокумент
//  ОбластьЯчейкиПечать	 - Символьное представление	адреса области ячейки, в которую вставляется рисунок - Строка 
//
Процедура ВставитьКартинкуВТабличныйДокумент(ОбъектСсылка, знач ТабДокумент, ОбластьЯчейкиПечать)
	
	ДвоичныеДанныеКартинки = РаботаСФайлами.ДвоичныеДанныеФайла(ОбъектСсылка);
	КартинкаПечать =  Новый Картинка(ДвоичныеДанныеКартинки, Истина);
	
	Рисунок = ТабДокумент.Рисунки.Добавить(ТипРисункаТабличногоДокумента.Картинка); 
	Рисунок.Картинка = КартинкаПечать;
	Рисунок.РазмерКартинки  = РазмерКартинки.Пропорционально;
	Рисунок.Линия = Новый Линия(ТипЛинииРисункаТабличногоДокумента.НетЛинии);
	Рисунок.Узор = ТипУзораТабличногоДокумента.БезУзора;
	Рисунок.ЦветФона = Новый Цвет;
	
	//ИндексПоследнейСтроки = ТабДок.ПолучитьРазмерОбластиДанныхПоВертикали();
	//ОбластьЯчейкиПечать = "R"+Формат(ИндексПоследнейСтроки - 10, "ЧГ=")+"C2:R"+Формат(ИндексПоследнейСтроки, "ЧГ=")+"C3";
	
	Рисунок.Расположить(ТабДокумент.Область(ОбластьЯчейкиПечать));
	
КонецПроцедуры	

Функция ДополнитьТабличныйДокументПодписями(Данные, ТабДокумент)
	
	// ----------------------- Генерим файл печати ------------------------------------------ //
	
	Попытка	
		ДвоичныеДанныеКартинки = РаботаСФайлами.ДвоичныеДанныеФайла(Данные.Организация.ФайлПечать);
		КартинкаПечать =  Новый Картинка(ДвоичныеДанныеКартинки, Истина);
		ТабДокумент.Рисунки.ФПечать.Картинка = КартинкаПечать;
		
	Исключение
		//Что-то пошло не так, не смогли сгенерить файл печати
	КонецПопытки;	
	
	
	// ----------------------- Генерим подпись руководителя --------------------------------- //	
	Попытка	
		
		ДвоичныеДанныеКартинки = РаботаСФайлами.ДвоичныеДанныеФайла(Данные.Руководитель.ФаксимилеПодписи);
		КартинкаПодписьРуководитель =  Новый Картинка(ДвоичныеДанныеКартинки, Истина);
		ТабДокумент.Рисунки.ФРуководитель.Картинка = КартинкаПодписьРуководитель;
		
	Исключение
		//Что-то пошло не так, не смогли сгенерить файл подписи
	КонецПопытки;	
	
	// ----------------------- Генерим подпись главного бухгалтера --------------------------------- //
	
	Попытка	
		
		ДвоичныеДанныеКартинки = РаботаСФайлами.ДвоичныеДанныеФайла(Данные.ГлавныйБухгалтер.ФаксимилеПодписи);
		КартинкаПодписьГлавныйБухгалтер =  Новый Картинка(ДвоичныеДанныеКартинки, Истина);
		ТабДокумент.Рисунки.ФГлавныйБухгалтер.Картинка = КартинкаПодписьГлавныйБухгалтер;
		
	Исключение
		//Что-то пошло не так, не смогли сгенерить файл подписи
	КонецПопытки;
	
	// ----------------------- Генерим подпись ответсвенного --------------------------------- //	
	Попытка	
		
		ДвоичныеДанныеКартинки = РаботаСФайлами.ДвоичныеДанныеФайла(Данные.Руководитель.ФаксимилеПодписи);
		КартинкаПодписьРуководитель =  Новый Картинка(ДвоичныеДанныеКартинки, Истина);
		ТабДокумент.Рисунки.ФОтветственныйЗаОформление.Картинка = КартинкаПодписьРуководитель;
		
	Исключение
		//Что-то пошло не так, не смогли сгенерить файл подписи
	КонецПопытки;	
	
	
	Возврат ТабДокумент;
	
КонецФункции	

&НаСервере
Функция ПолучитьТекстЗапросаПоДокументамУПД()
	
	ТекстЗапроса =
	
	"ВЫБРАТЬ
	|	СчетФактура.Ссылка КАК СчетФактура,
	|	ВЫБОР
	|		КОГДА СчетФактура.Исправление
	|			ТОГДА СчетФактура.ДатаИсходногоДокумента
	|		ИНАЧЕ СчетФактура.Дата
	|	КОНЕЦ КАК Дата,
	|	ВЫБОР
	|		КОГДА СчетФактура.Исправление
	|			ТОГДА СчетФактура.НомерИсходногоДокумента
	|		ИНАЧЕ СчетФактура.Номер
	|	КОНЕЦ КАК Номер,
	|	СчетФактура.ВидСчетаФактуры КАК ВидСчетаФактуры,
	|	СчетФактура.Руководитель КАК Руководитель,
	|	СчетФактура.ГлавныйБухгалтер КАК ГлавныйБухгалтер,
	|	СчетФактура.СчетФактураБезНДС КАК СчетФактураБезНДС,
	|	СчетФактура.Исправление КАК Исправление,
	|	СчетФактура.НомерИсправления КАК НомерИсправления,
	|	СчетФактура.Дата КАК ДатаИсправления,
	|	СчетФактура.Дата КАК ДатаСведений,
	|	НЕ СчетФактура.Исправление КАК УдалитьПрефиксыИзНомера,
	|	ИСТИНА КАК ЭтоСчетФактураВыданный,
	|	ИСТИНА КАК ВыводитьСуммуБезНДС,
	|	СчетФактураДокументыОснования.ДокументОснование КАК ДокументОснование,
	|	СчетФактураДокументыОснования.НомерСтроки КАК НомерСтроки,
	|	ВЫБОР
	|		КОГДА СчетФактура.Продавец <> ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|			ТОГДА СчетФактура.Продавец
	|		ИНАЧЕ СчетФактура.Контрагент
	|	КОНЕЦ КАК Контрагент,
	|	ВЫБОР
	|		КОГДА СчетФактура.Продавец <> ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ СчетФактура.ДоговорКонтрагента
	|	КОНЕЦ КАК ДоговорКонтрагента,
	|	СчетФактура.ИдентификаторГосКонтракта КАК ИдентификаторГосКонтракта,
	|	СчетФактура.КППКонтрагента КАК КППСчетаФактуры,
	|	СчетФактура.КПППродавца КАК КПППродавца,
	|	СчетФактура.Организация КАК Организация,
	|	ВЫБОР
	|		КОГДА СчетФактура.ДоговорКонтрагента <> ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	|			ТОГДА СчетФактура.ДоговорКонтрагента.ВидДоговора
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровКонтрагентов.СПокупателем)
	|	КОНЕЦ КАК ВидДоговора,
	|	СчетФактура.Организация.ОбособленноеПодразделение КАК ОбособленноеПодразделение,
	|	СчетФактура.Организация.ЦифровойИндексОбособленногоПодразделения КАК ЦифровойИндексОбособленногоПодразделения,
	|	ЛОЖЬ КАК НеподтверждениеНулевойСтавки,
	|	СчетФактура.СводныйКомиссионный КАК СводныйКомиссионный,
	|	ЕСТЬNULL(СчетФактура.ДоговорКонтрагента.СчетаФактурыОтИмениОрганизации, ЛОЖЬ) КАК СчетаФактурыОтИмениОрганизации
	|ИЗ
	|	Документ.СчетФактураВыданный.ДокументыОснования КАК СчетФактураДокументыОснования
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СчетФактураВыданный КАК СчетФактура
	|		ПО СчетФактураДокументыОснования.Ссылка = СчетФактура.Ссылка
	|ГДЕ
	|	СчетФактураДокументыОснования.Ссылка В(&МассивОбъектов)
	|	И ВЫБОР
	|			КОГДА СчетФактура.Исправление
	|				ТОГДА СчетФактура.ДатаИсходногоДокумента МЕЖДУ &НачалоПримененияПостановления1137 И ДАТАВРЕМЯ(2017,09,30,23,59,59)
	|			ИНАЧЕ СчетФактура.Дата МЕЖДУ &НачалоПримененияПостановления1137 И ДАТАВРЕМЯ(2017,09,30,23,59,59)
	|		КОНЕЦ
	|	И СчетФактура.ДокументыОснования.Ссылка.ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыВыставленного.НаРеализацию)
	|	И ТИПЗНАЧЕНИЯ(СчетФактураДокументыОснования.ДокументОснование) <> ТИП(Документ.ПодтверждениеНулевойСтавкиНДС)
	|	И ВЫБОР
	|			КОГДА СчетФактура.Исправление
	|				ТОГДА СчетФактура.ДатаИсходногоДокумента >= ДАТАВРЕМЯ(2013, 1, 1)
	|			ИНАЧЕ СчетФактура.Дата >= ДАТАВРЕМЯ(2013, 1, 1)
	|		КОНЕЦ
	|	И ТИПЗНАЧЕНИЯ(СчетФактураДокументыОснования.ДокументОснование) <> ТИП(Документ.ОтчетКомиссионераОПродажах)
	|	И ТИПЗНАЧЕНИЯ(СчетФактураДокументыОснования.ДокументОснование) <> ТИП(Документ.ОтражениеНачисленияНДС)
	|	И ТИПЗНАЧЕНИЯ(СчетФактураДокументыОснования.ДокументОснование) <> ТИП(Документ.НачислениеНДСпоСМРхозспособом) ОБЪЕДИНИТЬ ВСЕ ВЫБРАТЬ
	|	СчетФактура.Ссылка КАК СчетФактура,
	|	ВЫБОР
	|		КОГДА СчетФактура.Исправление
	|			ТОГДА СчетФактура.ДатаИсходногоДокумента
	|		ИНАЧЕ СчетФактура.Дата
	|	КОНЕЦ КАК Дата,
	|	ВЫБОР
	|		КОГДА СчетФактура.Исправление
	|			ТОГДА СчетФактура.НомерИсходногоДокумента
	|		ИНАЧЕ СчетФактура.Номер
	|	КОНЕЦ КАК Номер,
	|	СчетФактура.ВидСчетаФактуры,
	|	СчетФактура.Руководитель,
	|	СчетФактура.ГлавныйБухгалтер,
	|	ЛОЖЬ КАК СчетФактураБезНДС,
	|	СчетФактура.Исправление,
	|	СчетФактура.НомерИсправления,
	|	СчетФактура.Дата КАК ДатаИсправления,
	|	СчетФактура.Дата КАК ДатаСведений,
	|	НЕ СчетФактура.Исправление КАК УдалитьПрефиксыИзНомера,
	|	ИСТИНА КАК ЭтоСчетФактураВыданный,
	|	ЛОЖЬ КАК ВыводитьСуммуБезНДС,
	|	СчетФактура.Ссылка КАК ДокументОснование,
	|	1 КАК НомерСтроки,
	|	ВЫБОР
	|		КОГДА СчетФактура.Контрагент.ОбособленноеПодразделение
	|				И СчетФактура.Контрагент.ГоловнойКонтрагент.СтранаРегистрации = ЗНАЧЕНИЕ(Справочник.СтраныМира.Россия)
	|			ТОГДА СчетФактура.Контрагент.ГоловнойКонтрагент
	|		ИНАЧЕ СчетФактура.Контрагент
	|	КОНЕЦ КАК Контрагент,
	|	СчетФактура.ДоговорКонтрагента,
	|	СчетФактура.ИдентификаторГосКонтракта,
	|	СчетФактура.КППКонтрагента КАК КППСчетаФактуры,
	|	СчетФактура.КПППродавца КАК КПППродавца,
	|	СчетФактура.Организация,
	|	ВЫБОР
	|		КОГДА СчетФактура.ДоговорКонтрагента <> ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	|			ТОГДА СчетФактура.ДоговорКонтрагента.ВидДоговора
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровКонтрагентов.СПокупателем)
	|	КОНЕЦ КАК ВидДоговора,
	|	СчетФактура.Организация.ОбособленноеПодразделение,
	|	СчетФактура.Организация.ЦифровойИндексОбособленногоПодразделения,
	|	ЛОЖЬ КАК НеподтверждениеНулевойСтавки,
	|	СчетФактура.СводныйКомиссионный КАК СводныйКомиссионный,
	|	ЕСТЬNULL(СчетФактура.ДоговорКонтрагента.СчетаФактурыОтИмениОрганизации, ЛОЖЬ) КАК СчетаФактурыОтИмениОрганизации
	|ИЗ
	|	Документ.СчетФактураВыданный КАК СчетФактура
	|ГДЕ
	|	СчетФактура.Ссылка В(&МассивОбъектов)
	|	И ВЫБОР
	|			КОГДА СчетФактура.Исправление
	|				ТОГДА СчетФактура.ДатаИсходногоДокумента МЕЖДУ &НачалоПримененияПостановления1137 И ДАТАВРЕМЯ(2017,09,30,23,59,59)
	|			ИНАЧЕ СчетФактура.Дата МЕЖДУ &НачалоПримененияПостановления1137 И ДАТАВРЕМЯ(2017,09,30,23,59,59)
	|		КОНЕЦ
	|	И СчетФактура.ВидСчетаФактуры В (ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыВыставленного.НаАванс), ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыВыставленного.НаАвансКомитента), ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыВыставленного.НаАвансКомитентаНаЗакупку))
	|УПОРЯДОЧИТЬ ПО
	|	Дата,
	|	СчетФактура,
	|	НомерСтроки
	|ИТОГИ
	|	МАКСИМУМ(Дата),
	|	МАКСИМУМ(Номер),
	|	МАКСИМУМ(ВидСчетаФактуры),
	|	МАКСИМУМ(СчетФактураБезНДС),
	|	МАКСИМУМ(Исправление),
	|	МАКСИМУМ(НомерИсправления),
	|	МАКСИМУМ(ДатаИсправления),
	|	МАКСИМУМ(УдалитьПрефиксыИзНомера),
	|	МАКСИМУМ(ЭтоСчетФактураВыданный),
	|	МАКСИМУМ(ВыводитьСуммуБезНДС),
	|	МАКСИМУМ(НеподтверждениеНулевойСтавки)
	|ПО
	|	СчетФактура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СчетФактураВыданныйПлатежноРасчетныеДокументы.Ссылка КАК СчетФактура,
	|	СчетФактураВыданныйПлатежноРасчетныеДокументы.НомерСтроки КАК НомерСтроки,
	|	СчетФактураВыданныйПлатежноРасчетныеДокументы.ДатаДокумента КАК ДатаДокумента,
	|	СчетФактураВыданныйПлатежноРасчетныеДокументы.НомерДокумента КАК НомерДокумента,
	|	ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка) КАК Контрагент
	|ИЗ
	|	Документ.СчетФактураВыданный.ПлатежноРасчетныеДокументы КАК СчетФактураВыданныйПлатежноРасчетныеДокументы
	|ГДЕ
	|	СчетФактураВыданныйПлатежноРасчетныеДокументы.Ссылка В(&МассивОбъектов)
	|	И НЕ(СчетФактураВыданныйПлатежноРасчетныеДокументы.Ссылка.ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыВыставленного.НаАванс)
	|				ИЛИ СчетФактураВыданныйПлатежноРасчетныеДокументы.Ссылка.ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыВыставленного.НаАвансКомитента)
	|				ИЛИ СчетФактураВыданныйПлатежноРасчетныеДокументы.Ссылка.ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыВыставленного.НаАвансКомитентаНаЗакупку))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СчетФактураВыданныйАвансы.Ссылка,
	|	СчетФактураВыданныйАвансы.НомерСтроки,
	|	СчетФактураВыданныйАвансы.ДатаПлатежноРасчетногоДокумента,
	|	СчетФактураВыданныйАвансы.НомерПлатежноРасчетногоДокумента,
	|	СчетФактураВыданныйАвансы.Контрагент
	|ИЗ
	|	Документ.СчетФактураВыданный.Авансы КАК СчетФактураВыданныйАвансы
	|ГДЕ
	|	СчетФактураВыданныйАвансы.Ссылка В(&МассивОбъектов)
	|	И СчетФактураВыданныйАвансы.Ссылка.ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыВыставленного.НаАвансКомитентаНаЗакупку)
	|	И СчетФактураВыданныйАвансы.Ссылка.СводныйКомиссионный
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СчетФактураВыданный.Ссылка,
	|	1,
	|	СчетФактураВыданный.ДатаПлатежноРасчетногоДокумента,
	|	СчетФактураВыданный.НомерПлатежноРасчетногоДокумента,
	|	СчетФактураВыданный.Контрагент
	|ИЗ
	|	Документ.СчетФактураВыданный КАК СчетФактураВыданный
	|ГДЕ
	|	СчетФактураВыданный.Ссылка В(&МассивОбъектов)
	|	И СчетФактураВыданный.ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыВыставленного.НаАванс)
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|;";
	
	Возврат ТекстЗапроса;
	
КонецФункции	

&НаСервере
Функция ПолучитьСчетНаОплату(Организация, Документ, ДатаДокумента, НомерДокумента) экспорт
	
	МассивОбъектов = Новый Массив;
	
	//Если ссылка на счет передана явно, то нет смысла его искать
	Если Документ <> Неопределено Тогда
		МассивОбъектов.Добавить(Документ);
	Иначе
		
		Документ = Документы.СчетНаОплатуПокупателю.ПустаяСсылка();	
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	СчетНаОплатуПокупателю.Ссылка КАК Ссылка
		|ИЗ
		|	Документ.СчетНаОплатуПокупателю КАК СчетНаОплатуПокупателю
		|ГДЕ
		|	СчетНаОплатуПокупателю.Номер = &Номер
		|	И СчетНаОплатуПокупателю.Дата МЕЖДУ &НачалоПериода и &ОкончаниеПериода
		|	И СчетНаОплатуПокупателю.Организация = &Организация";
		
		Запрос.УстановитьПараметр("НачалоПериода", НачалоДня(ДатаДокумента));
		Запрос.УстановитьПараметр("ОкончаниеПериода", КонецДня(ДатаДокумента));
		Запрос.УстановитьПараметр("Номер", НомерДокумента);
		Запрос.УстановитьПараметр("Организация", Организация);
		
		РезультатЗапроса = Запрос.Выполнить();
		
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			МассивОбъектов.Добавить(ВыборкаДетальныеЗаписи.Ссылка);
		КонецЦикла;
		
		
	КонецЕсли;	
	
	Возврат МассивОбъектов;
	
КонецФункции	

&НаСервере
Функция ПолучитьРеализациюТоваровИУслуг(Организация, Документ, ДатаДокумента, НомерДокумента) экспорт
	
	МассивОбъектов = Новый Массив;
	
	//Если ссылка на счет передана явно, то нет смысла его искать
	Если Документ <> Неопределено Тогда
		МассивОбъектов.Добавить(Документ);
	Иначе
		
		РеализацияТоваровУслуг = Документы.РеализацияТоваровУслуг.ПустаяСсылка();	
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	РеализацияТоваровУслуг.Ссылка КАК Ссылка
		|ИЗ
		|	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
		|ГДЕ
		|	РеализацияТоваровУслуг.Номер = &Номер
		|	И РеализацияТоваровУслуг.Дата МЕЖДУ &НачалоПериода и &ОкончаниеПериода
		|	И РеализацияТоваровУслуг.Организация = &Организация";
		
		Запрос.УстановитьПараметр("НачалоПериода", НачалоДня(ДатаДокумента));
		Запрос.УстановитьПараметр("ОкончаниеПериода", КонецДня(ДатаДокумента));
		Запрос.УстановитьПараметр("Номер", НомерДокумента);
		Запрос.УстановитьПараметр("Организация", Организация);
		
		РезультатЗапроса = Запрос.Выполнить();
		
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			МассивОбъектов.Добавить(ВыборкаДетальныеЗаписи.Ссылка);
		КонецЦикла;
		
		
	КонецЕсли;	
	
	Возврат МассивОбъектов;
	
КонецФункции

&НаСервере
Функция ПолучитьСчетФактуруВыданный(Организация, Документ, ДатаДокумента, НомерДокумента) экспорт
	
	МассивОбъектов = Новый Массив;
	
	//Если ссылка на счет передана явно, то нет смысла его искать
	Если Документ <> Неопределено Тогда
		МассивОбъектов.Добавить(Документ);
	Иначе
		
		СчетФактураВыданный = Документы.СчетФактураВыданный.ПустаяСсылка();	
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	СчетФактураВыданный.Ссылка КАК Ссылка
		|ИЗ
		|	Документ.СчетФактураВыданный КАК СчетФактураВыданный
		|ГДЕ
		|	СчетФактураВыданный.Номер = &Номер
		|	И СчетФактураВыданный.Дата МЕЖДУ &НачалоПериода и &ОкончаниеПериода
		|	И СчетФактураВыданный.Организация = &Организация";
		
		Запрос.УстановитьПараметр("НачалоПериода", НачалоДня(ДатаДокумента));
		Запрос.УстановитьПараметр("ОкончаниеПериода", КонецДня(ДатаДокумента));
		Запрос.УстановитьПараметр("Номер", НомерДокумента);
		Запрос.УстановитьПараметр("Организация", Организация);
		
		РезультатЗапроса = Запрос.Выполнить();
		
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			МассивОбъектов.Добавить(ВыборкаДетальныеЗаписи.Ссылка);
		КонецЦикла;
		
		
	КонецЕсли;	
	
	Возврат МассивОбъектов;
	
КонецФункции

&НаСервере
Функция ПолучитьТабличныйДокументСчетНаОплату(Организация, Документ, ДатаДокумента, НомерДокумента, ПечатнаяФорма) экспорт
	
	МассивОбъектов = ПолучитьСчетНаОплату(Организация, Документ, ДатаДокумента, НомерДокумента);
	ТипыОбъектов = ОбщегоНазначенияБП.РазложитьСписокПоТипамОбъектов(МассивОбъектов);
	
	Для каждого ОбъектыТипа Из ТипыОбъектов Цикл
		
		МенеджерОбъекта = ОбщегоНазначения.МенеджерОбъектаПоСсылке(ОбъектыТипа.Значение[0]);
		
		ДокументыБезСчетовНаОплату = Неопределено;
		СоответствиеСчетовРеализациям = Неопределено;
		ТаблицаСведенийСчетНаОплату = МенеджерОбъекта.ПолучитьТаблицуСведенийСчетаНаОплату(ОбъектыТипа.Значение, СоответствиеСчетовРеализациям, ДокументыБезСчетовНаОплату);
		
		ОбъектыПечати 	= Новый СписокЗначений;
		ПараметрыПечати = Новый Структура;
		ПараметрыПечати.Вставить("ДополнитьКомплектВнешнимиПечатнымиФормами", Ложь);
		
		ТабДок = ПечатьТорговыхДокументовПереопределяемый.ПечатьСчетаНаОплату(ТаблицаСведенийСчетНаОплату, ОбъектыПечати, ПараметрыПечати);	
		ТабДок = ДополнитьТабличныйДокументПодписями(ОбъектыТипа.Значение[0], ТабДок);
		
	КонецЦикла;
	
	Возврат ТабДок;
	
КонецФункции

&НаСервере
Функция ПолучитьТабличныйДокументРеализация(Организация, Документ, ДатаДокумента, НомерДокумента, ПечатнаяФорма) экспорт
	
	МассивОбъектов = ПолучитьРеализациюТоваровИУслуг(Организация, Документ, ДатаДокумента, НомерДокумента);
	ТипыОбъектов = ОбщегоНазначенияБП.РазложитьСписокПоТипамОбъектов(МассивОбъектов);
	
	Для каждого ОбъектыТипа Из ТипыОбъектов Цикл
		
		МенеджерОбъекта = ОбщегоНазначения.МенеджерОбъектаПоСсылке(ОбъектыТипа.Значение[0]);
		
		
		
		ОбъектыПечати 	= Новый СписокЗначений;
		ПараметрыПечати = Новый Структура;
		
		Если (НРЕГ(СокрЛП(ПечатнаяФорма)) = "torg12") ИЛИ (НРЕГ(СокрЛП(ПечатнаяФорма)) = "torg12usl") тогда
			
			Если (НРЕГ(СокрЛП(ПечатнаяФорма)) = "torg12") тогда
				ТаблицаСведенийТОРГ12 = МенеджерОбъекта.ПолучитьТаблицуСведенийТОРГ12(ОбъектыТипа.Значение, Ложь);
			ИначеЕсли (НРЕГ(СокрЛП(ПечатнаяФорма)) = "torg12usl") тогда
				ТаблицаСведенийТОРГ12 = МенеджерОбъекта.ПолучитьТаблицуСведенийТОРГ12(ОбъектыТипа.Значение, Истина);
			Иначе
				//
			КонецЕсли;	
			
			ПараметрыПечати.Вставить("ИмяПараметровПечати", "ПАРАМЕТРЫ_ПЕЧАТИ_РеализацияТоваровУслуг_ТОРГ12");
			ПараметрыПечати.Вставить("ДополнитьКомплектВнешнимиПечатнымиФормами", Ложь);
			ТабДок = ПечатьТорговыхДокументовПереопределяемый.ПечатьТОРГ12(ТаблицаСведенийТОРГ12, ОбъектыПечати, ПараметрыПечати);
			ТабДок = ДополнитьТабличныйДокументПодписями(ОбъектыТипа.Значение[0], ТабДок);
			
		ИначеЕсли НРЕГ(СокрЛП(ПечатнаяФорма)) = "actusl" тогда
			
			ПараметрыПечати.Вставить("ВидДокументаПечати", "РеализацияТоваровУслуг");
			ПараметрыПечати.Вставить("ДополнитьКомплектВнешнимиПечатнымиФормами", Ложь);
			ПараметрыПечати.Вставить("ИмяПараметровПечати", "ПАРАМЕТРЫ_ПЕЧАТИ_РеализацияТоваровУслуг_Акт");
			ПараметрыПечати.Вставить("ИмяМакетаПечати", "ОбщиийМакет.ПФ_MXL_Акт_Переопределяемый");
			ТаблицаСведенийАктОказанияУслуг = МенеджерОбъекта.ПолучитьТаблицуСведенийАктаОбОказанииУслуг(ОбъектыТипа.Значение);
			ТабДок = ПечатьТорговыхДокументов.ПечатьАктаОбОказанииУслуг(ТаблицаСведенийАктОказанияУслуг, ОбъектыПечати, ПараметрыПечати);
			ТабДок = ДополнитьТабличныйДокументПодписями(ОбъектыТипа.Значение[0], ТабДок);
			
		Иначе
			//
		КонецЕсли;	
		
	КонецЦикла;
	
	Возврат ТабДок;
	
КонецФункции

&НаСервере
Функция ПолучитьТабличныйДокументСчетФактураВыданный(Организация, Документ, ДатаДокумента, НомерДокумента, ПечатнаяФорма) экспорт
	
	МассивОбъектов = ПолучитьСчетФактуруВыданный(Организация, Документ, ДатаДокумента, НомерДокумента);
	ТипыОбъектов = ОбщегоНазначенияБП.РазложитьСписокПоТипамОбъектов(МассивОбъектов);
	
	Для каждого ОбъектыТипа Из ТипыОбъектов Цикл
		
		МенеджерОбъекта = ОбщегоНазначения.МенеджерОбъектаПоСсылке(ОбъектыТипа.Значение[0]);
		
		ОбъектыПечати 	= Новый СписокЗначений;
		ПараметрыПечати = Новый Структура;
		
		Если НРЕГ(СокрЛП(ПечатнаяФорма)) = "upd" тогда	
			
			ПараметрыПечати.Вставить("ИдентификаторВКомплекте", "УниверсальныйПередаточныйДокументКомплект");
			ЗапросДоДокументамУПД = ПолучитьТекстЗапросаПоДокументамУПД();
			ТабДок = ПечатьТорговыхДокументовПереопределяемый.ПечатьУниверсальныхПередаточныхДокументов(МассивОбъектов, ОбъектыПечати, ЗапросДоДокументамУПД, Ложь, Неопределено, ПараметрыПечати);
			ТабДок = ДополнитьТабличныйДокументПодписями(ОбъектыТипа.Значение[0], ТабДок);
			
		КонецЕсли;		
		
	КонецЦикла;
	
	Возврат ТабДок;
	
КонецФункции